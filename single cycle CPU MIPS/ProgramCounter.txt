library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
use IEEE.NUMERIC_STD.ALL;

-- Uncomment the following library declaration if instantiating
-- any Xilinx leaf cells in this code.
--library UNISIM;
--use UNISIM.VComponents.all;

entity programCounter is
  generic( constant buswidth: integer := 32);
  Port ( addr_in : in std_logic_vector(buswidth-1 downto 0);
         addr : out std_logic_vector(buswidth-1 downto 0);
         EN : in std_logic;
         LD : in std_logic;
         clk : in std_logic;
         reset : in std_logic
         );
end programCounter;

architecture Behavioral of programCounter is

signal count : unsigned(buswidth-1 downto 0);

begin
    counter: process (clk, reset)
        begin
            if (rising_edge(clk)) then
                if (reset = '1') then
                    count <= (others => '0');
                elsif (EN ='1') then
                    if (LD = '0') then
                        count <= count + 4;   -- bei arithmetischen Operationen kein Casting notwendig  
                    elsif (LD ='1') then 
                        count <= unsigned(addr_in);
                    end if;
                end if;
            end if;
        end process;

    addr <= std_logic_vector(count);

end Behavioral;
